{"version":3,"sources":["src/migme.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,QAAQ,GAAG,oBAAoB,CAAC;AACtC,IAAM,UAAU,GAAG,4BAA4B,CAAC;;IAE3B,KAAK;AAEZ,WAFO,KAAK,GAEG;QAAd,OAAO,gCAAG,EAAE;;0BAFN,KAAK;;AAGtB,QAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,sBAAsB,CAAC;AAC7D,QAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,sCAAsC,CAAC;GACpF;;eALkB,KAAK;AAYxB,kBAAc;;;;;;;;aAAC,0BAAG;AAChB,eAAO,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;OAC/B;;AAED,kBAAc;aAAC,wBAAC,YAAY,EAAE;AAC5B,YAAI,CAAC,YAAY,GAAG,YAAY,CAAC;OAClC;;AAOD,SAAK;;;;;;;;aAAC,iBAAc;YAAb,MAAM,gCAAG,EAAE;;AAEhB,YAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACjC,gBAAM,CAAC,IAAI,CAAC,UAAU,GACV,mBAAmB,GAAG,IAAI,CAAC,SAAS,GACpC,gBAAgB,GAAG,IAAI,CAAC,YAAY,GACpC,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,GAC7B,qBAAqB,CAAC,CAAC;SACpC;OAEF;;AAED,UAAM;aAAC,kBAAG;AACR,eAAO,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;OAC/B;;AAED,OAAG;aAAC,aAAC,QAAQ,EAAgB;YAAd,OAAO,gCAAG,EAAE;;AACzB,YAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC/B,kBAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC;SAC3B;;AAED,YAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;AAC5C,iBAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC;AAC7C,iBAAO,CAAC,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;AACtD,iBAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC1C,iBAAO,KAAK,CAAC,QAAQ,GAAG,QAAQ,EAAE,OAAO,CAAC,CAAC;SAC5C,MAAM;AACL,iBAAO,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACvE;OACF;;;;SAtDkB,KAAK;;;iBAAL,KAAK","file":"src/migme.js","sourcesContent":["const API_BASE = 'https://api.mig.me';\nconst OAUTH_BASE = 'https://oauth.mig.me/oauth';\n\nexport default class Migme {\n\n  constructor (options = {}) {\n    this.client_id = options.client_id || '309f818242abae8fdd1b';\n    this.redirect_uri = options.redirect_uri || 'http://localhost:8080/oauth/callback';\n  }\n\n  /**\n   * @brief Returns the migme login status of a user.\n   * @details Returns the migme login status of a user, with an authResponse object if they are logged in.\n   * @return authResponse object\n   */\n  getLoginStatus () {\n    return fetch(OAUTH_BASE + '');\n  }\n\n  setAccessToken (access_token) {\n    this.access_token = access_token;\n  }\n\n  /**\n   * @brief Prompts a user to login to your app.\n   * @details Prompts a user to login to your app using the Login dialog in a popup. This method can also be used with an already logged-in user to request additional permissions from them.\n   * @return authResponse object\n   */\n  login (scopes = []) {\n\n    if (typeof window !== 'undefined') {\n      window.open(OAUTH_BASE +\n                  '/login?client_id=' + this.client_id +\n                  '&redirect_uri=' + this.redirect_uri +\n                  '&scope=' + scopes.toString() +\n                  '&response_type=code');\n    }\n\n  }\n\n  logout () {\n    return fetch(OAUTH_BASE + '');\n  }\n\n  api (endpoint, options = {}) {\n    if (endpoint.indexOf('/') !== 0) {\n      endpoint = '/' + endpoint;\n    }\n\n    if (typeof this.access_token !== 'undefined') {\n      options['Content-Type'] = 'application/json';\n      options.Authorization = 'Bearer ' + this.access_token;\n      console.log(API_BASE + endpoint, options);\n      return fetch(API_BASE + endpoint, options);\n    } else {\n      console.error('You need to get an access_token before calling api()');\n    }\n  }\n}\n"]}